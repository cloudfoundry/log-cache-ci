# Deploy P-Metric Store as a separate deployment
name: p-metric-store

stemcells:
- alias: default
  os: ubuntu-xenial
  version: latest

releases:
- name: p-metric-store-release
  version: latest
- name: bosh-dns
  version: latest
- name: loggregator-agent
  version: latest
- name: routing
  version: latest

addons:
- name: bosh-dns
  include:
    stemcell:
    - os: ubuntu-xenial
  jobs:
  - name: bosh-dns
    release: bosh-dns

instance_groups:
- name: p-metric-store
  azs:
  - z1
  instances: 3
  persistent_disk_type: 5GB
  vm_type: minimal
  stemcell: default
  networks:
  - name: default
  jobs:
  - name: metric-store
    release: p-metric-store-release
    provides:
      metric-store: {shared: true, as: p-metric-store}
    properties:
      egress_port: 8080
      health_addr: localhost:6060
      tls:
        ca_cert: ((p_metric_store.ca))
        cert: ((p_metric_store.certificate))
        key: ((p_metric_store.private_key))
  - name: metric-store-gateway
    release: p-metric-store-release
    provides:
      metric-store-gateway: {as: p-metric-store-gateway}
    consumes:
      metric-store: {from: p-metric-store}
    properties:
      gateway_addr: localhost:8081
  - name: metric-store-nozzle
    release: p-metric-store-release
    provides:
      metric-store-nozzle: {as: p-metric-store-nozzle}
    consumes:
      reverse_log_proxy: {from: reverse_log_proxy, deployment: cf}
      metric-store-nozzle: {from: p-metric-store-nozzle}
      metric-store: {from: p-metric-store}
    properties:
      shard_id: p-metric-store
      logs_provider:
        tls:
          ca_cert: ((p_metric_store_to_logs_provider.ca))
          cert: ((p_metric_store_to_logs_provider.certificate))
          key: ((p_metric_store_to_logs_provider.private_key))
  - name: metric-store-cf-auth-proxy
    release: p-metric-store-release
    provides:
      metric-store-cf-auth-proxy: {as: p-metric-store-cf-auth-proxy}
    consumes:
      cloud_controller: {from: cloud_controller, deployment: cf}
      metric-store-nozzle: {from: p-metric-store-nozzle}
      metric-store-gateway: {from: p-metric-store-gateway}
      metric-store: {from: p-metric-store}
    properties:
      cc:
        ca_cert: ((service_cf_internal_ca.certificate))
        common_name: cloud-controller-ng.service.cf.internal
      proxy_port: 8083
      external_cert: ((p_metricstore_ssl.certificate))
      external_key: ((p_metricstore_ssl.private_key))
      uaa:
        ca_cert: ((uaa_ca.certificate))
        client_id: doppler
        client_secret: ((uaa_clients_doppler_secret))
        internal_addr: https://uaa.service.cf.internal:8443
  - name: prom_scraper
    release: loggregator-agent
    consumes:
      loggregator: {from: loggregator, deployment: cf}
    properties:
      metrics_urls: "http://localhost:6060/metrics,http://localhost:6061/metrics,http://localhost:6065/metrics"
  - name: route_registrar
    release: routing
    properties:
      route_registrar:
        routes:
        - name: p-metric-store-reverse-proxy
          tls_port: 8083
          registration_interval: 20s
          server_cert_domain_san: ms.((system_domain))
          uris:
          - ms.((system_domain))
          - "*.ms.((system_domain))"

variables:
- name: p_metric_store_to_logs_provider
  type: certificate
  options:
    ca: loggregator_ca
    common_name: ms
    extended_key_usage:
    - client_auth
    - server_auth
- name: p_metric_store_ca
  type: certificate
  options:
    is_ca: true
    common_name: ms
- name: p_metric_store
  type: certificate
  options:
    ca: p_metric_store_ca
    common_name: ms
    alternative_names:
    - metric_store
    - metric-store
    extended_key_usage:
    - client_auth
    - server_auth
- name: p_metricstore_ssl
  type: certificate
  options:
    ca: service_cf_internal_ca
    common_name: ms
    alternative_names:
    - ms.((system_domain))
    - "*.ms.((system_domain))"

update:
  canaries: 10
  max_in_flight: 10
  canary_watch_time: 30000-60000
  update_watch_time: 5000-60000
  serial: true
