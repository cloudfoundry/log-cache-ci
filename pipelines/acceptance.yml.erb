<% envs_we_care_about = { "2.4": "us_2_4", "2.5": "us_2_5", "2.6": "us_2_6" } %>
groups:
- name: all
  jobs:
  - log-cache-bump-submodule
  - p-metric-store-unit-tests
  - log-cache-docker-images
  - cf-deploy
  - "ü•ñ Bake Tile üç∞"
  - "üöΩ Install Tile üçæ"
  <% envs_we_care_about.each do |name, _| %>
  - "Install on PCF <%= name %>"
  <% end %>
  - ü•ñ Bake Final Tile ü•ñ
  - üöÄ Push to Pivnet üöÄ
  - log-cache-acceptance-tests-release-bump-submodule
  - lcats
  - cats
  - log-cache-release-elect-promotion
  - log-cache-master-promotion
  - p-metric-store-release-elect-promotion
  - p-metric-store-test-gate
  - p-metric-store-master-promotion
  - oss-metric-store-release-elect-promotion
  - oss-metric-store-master-promotion
  - create-p-metric-store-dev-release
  - oss-metric-store-unit-tests
  - oss-ms-üö¨
  - p-ms-üö¨
  - create-oss-metric-store-dev-release
  - bump-oss-metric-store
- name: log-cache
  jobs:
  - log-cache-bump-submodule
  - cf-deploy
  - log-cache-docker-images
  - log-cache-acceptance-tests-release-bump-submodule
  - lcats
  - cats
  - log-cache-release-elect-promotion
  - log-cache-master-promotion
- name: oss-metric-store
  jobs:
  - oss-metric-store-unit-tests
  - create-oss-metric-store-dev-release
  - cf-deploy
  - oss-ms-üö¨
  - oss-metric-store-release-elect-promotion
  - oss-metric-store-master-promotion
- name: p-metric-store
  jobs:
  - p-metric-store-unit-tests
  - p-metric-store-release-elect-promotion
  - p-metric-store-test-gate
  - p-metric-store-master-promotion
  - create-p-metric-store-dev-release
  - cf-deploy
  - p-ms-üö¨
  - "ü•ñ Bake Tile üç∞"
  - "üöΩ Install Tile üçæ"
  <% envs_we_care_about.each do |name, _| %>
  - "Install on PCF <%= name %>"
  <% end %>
  - p-metric-store-release-elect-promotion
  - p-metric-store-master-promotion
  - bump-oss-metric-store
  - ü•ñ Bake Final Tile ü•ñ
  - üöÄ Push to Pivnet üöÄ
- name: log-cache-cli
  jobs:
  - log-cache-cli-tests
  - lcats
  - log-cache-cli-integration-tests
  - log-cache-cli-promotion
- name: log-cache-tools
  jobs:
  - log-cache-tools-tests

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    branch: release-candidate

- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    branch: v8.12

- name: cf-deployment-concourse-tasks-image
  type: docker-image
  source:
    repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
    tag: latest

- name: denver-locks
  type: git
  source:
    uri: git@github.com:pivotal-cf/denver-locks.git
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: log-cache-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/log-cache-acceptance-tests
    branch: master

- name: log-cache-acceptance-tests-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-acceptance-tests-release
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: cf-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-acceptance-tests
    branch: master

- name: log-cache-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-ci
    private_key: ((github-key-ci.yml/Notes/github_key))
    branch: it-is-friday

- name: log-cache-deployments
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-deployments
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: log-cache-ci-docker-images
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-ci
    branch: it-is-friday
    private_key: ((github-key-ci.yml/Notes/github_key))
    paths:
    - docker-images

- name: log-cache-image
  type: docker-image
  source:
    repository: logcache/log-cache
    username: ((docker-hub-ci.yml/Notes/docker-hub-username))
    password: ((docker-hub-ci.yml/Notes/docker-hub-password))

- name: scheduler-image
  type: docker-image
  source:
    repository: logcache/log-cache-scheduler
    username: ((docker-hub-ci.yml/Notes/docker-hub-username))
    password: ((docker-hub-ci.yml/Notes/docker-hub-password))

- name: nozzle-image
  type: docker-image
  source:
    repository: logcache/log-cache-nozzle
    username: ((docker-hub-ci.yml/Notes/docker-hub-username))
    password: ((docker-hub-ci.yml/Notes/docker-hub-password))

- name: gateway-image
  type: docker-image
  source:
    repository: logcache/log-cache-gateway
    username: ((docker-hub-ci.yml/Notes/docker-hub-username))
    password: ((docker-hub-ci.yml/Notes/docker-hub-password))

- name: tile-image
  type: docker-image
  source:
    repository: logcache/metric-store-tile
    username: ((docker-hub-ci.yml/Notes/docker-hub-username))
    password: ((docker-hub-ci.yml/Notes/docker-hub-password))

- name: pcf-observability-ci-image
  type: docker-image
  source:
    repository: gcr.io/cf-denver/pcf-observability-ci
    username: _json_key
    password: ((release-credentials.yml/Notes/gcp-service-account-key))

- name: log-cache-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-release
    branch: develop
    private_key: ((github-key-ci.yml/Notes/github_key))
    ignore_paths:
    - .final_builds
    - releases
    disable_ci_skip: false

- name: log-cache-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-release
    branch: release-elect
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: log-cache-release-master
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-release
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))
    disable_ci_skip: true

- name: log-cache
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: p-metric-store
  type: git
  source:
    uri: git@github.com:pivotal/metric-store
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: p-metric-store-release
  type: git
  source:
    uri: git@github.com:pivotal/metric-store-release
    branch: develop
    private_key: ((github-key-ci.yml/Notes/github_key))
    ignore_paths:
    - .final_builds
    - releases
    disable_ci_skip: false
    clean_tags: true

- name: p-metric-store-release-elect
  type: git
  source:
    uri: git@github.com:pivotal/metric-store-release
    branch: release-elect
    private_key: ((github-key-ci.yml/Notes/github_key))
    clean_tags: true

- name: p-metric-store-release-master
  type: git
  source:
    uri: git@github.com:pivotal/metric-store-release
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))
    disable_ci_skip: true
    clean_tags: true

- name: oss-metric-store
  type: git
  source:
    uri: git@github.com:cloudfoundry/metric-store-release
    branch: develop
    private_key: ((github-key-ci.yml/Notes/github_key))
    ignore_paths:
    - .final_builds
    - releases
    disable_ci_skip: false
    clean_tags: true

- name: oss-metric-store-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/metric-store-release
    branch: release-elect
    private_key: ((github-key-ci.yml/Notes/github_key))
    clean_tags: true

- name: oss-metric-store-release-master
  type: git
  source:
    uri: git@github.com:cloudfoundry/metric-store-release
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))
    disable_ci_skip: true
    clean_tags: true

- name: oss-metric-store-dev-release-version
  type: semver
  source:
    driver: gcs
    bucket: log-cache-ci-notifications
    key: oss-metric-store-dev-release-version
    initial_version: 0.0.0
    json_key: ((release-credentials.yml/Notes/gcp-service-account-key))

- name: oss-metric-store-dev-release
  type: gcs-resource
  source:
    bucket: log-cache-ci-notifications
    json_key: ((release-credentials.yml/Notes/gcp-service-account-key))
    regexp: oss-metric-store-dev-releases/release-(.*).tgz

- name: log-cache-cli
  type: git
  source:
    uri: https://github.com/cloudfoundry/log-cache-cli
    branch: develop

- name: log-cache-tools
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/log-cache-tools
    branch: master

- name: log-cache-cli-master
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-cli
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: bumper-tool
  type: git
  source:
    uri: https://github.com/loggregator/bumper

- name: metric-registrar-release
  type: github-release
  source:
    user: pivotal-cf
    repository: metric-registrar-release
    access_token: ((github-key-ci.yml/Notes/github-access-token))

- name: grafana-boshrelease
  type: git
  source:
    uri: https://github.com/vito/grafana-boshrelease

- name: concourse-tasks
  type: git
  source:
    uri: https://github.com/pivotal-cf/concourse-tasks
    branch: master

- name: golang-release
  type: git
  source:
    uri: git@github.com:bosh-packages/golang-release
    branch: master
    tag_filter: v*
    private_key: ((github-key-ci.yml/Notes/github_key))

# currently pinned to af6ff5c02f8e4e9e495dba5b3faf8095c92bc0fb
# while observability-store iterates - RH
- name: bobble
  type: git
  source:
    uri: git@github.com:pivotal/bobble
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: slack-alert
  type: slack-notification
  source:
    url: ((slack-ci.yml/Notes/slack_alert_webhook_url))

- name: slack-high-visibility-alert
  type: slack-notification
  source:
    url: ((slack-ci.yml/Notes/slack_high_visibility_alert_webhook_url))

- name: notification-log-cache-tests-version
  type: semver
  source:
    driver: gcs
    bucket: log-cache-ci-notifications
    key: log-cache-slack-log-cache-tests-version
    initial_version: 0.0.0
    json_key: ((release-credentials.yml/Notes/gcp-service-account-key))

- name: notification-cli-tests-version
  type: semver
  source:
    driver: gcs
    bucket: log-cache-ci-notifications
    key: log-cache-slack-cli-tests-version
    initial_version: 0.0.0
    json_key: ((release-credentials.yml/Notes/gcp-service-account-key))

- name: notification-tools-tests-version
  type: semver
  source:
    driver: gcs
    bucket: log-cache-ci-notifications
    key: log-cache-slack-tools-tests-version
    initial_version: 0.0.0
    json_key: ((release-credentials.yml/Notes/gcp-service-account-key))

- name: notification-cli-integration-tests-version
  type: semver
  source:
    driver: gcs
    bucket: log-cache-ci-notifications
    key: log-cache-slack-integration-tests-version
    initial_version: 0.0.0
    json_key: ((release-credentials.yml/Notes/gcp-service-account-key))

- name: notification-cf-deploy-version
  type: semver
  source:
    driver: gcs
    bucket: log-cache-ci-notifications
    key: log-cache-slack-cf-deploy-version
    initial_version: 0.0.0
    json_key: ((release-credentials.yml/Notes/gcp-service-account-key))

- name: p-metric-store-dev-release-version
  type: semver
  source:
    driver: gcs
    bucket: log-cache-ci-notifications
    key: metric-store-dev-release-version
    initial_version: 0.0.0
    json_key: ((release-credentials.yml/Notes/gcp-service-account-key))

- name: p-metric-store-version
  type: semver
  source:
    driver: gcs
    bucket: log-cache-ci-versions
    key: metric-store-release-acceptance-tile
    json_key: ((release-credentials.yml/Notes/gcp-service-account-key))
    initial_version: 0.1.2-build.14

- name: p-metric-store-dev-release
  type: gcs-resource
  source:
    bucket: log-cache-ci-notifications
    json_key: ((release-credentials.yml/Notes/gcp-service-account-key))
    regexp: metric-store-dev-releases/release-(.*).tgz

- name: temp-baked-tile
  type: gcs-resource
  source:
    bucket: log-cache-ci-notifications
    json_key: ((release-credentials.yml/Notes/gcp-service-account-key))
    regexp: temp-baked-tiles/(.*).pivotal

- name: freshly-baked-final-tiles
  type: gcs-resource
  source:
    bucket: p-metric-store-release
    json_key: ((release-credentials.yml/Notes/gcp-service-account-key))
    regexp: tiles/(.*).pivotal

- name: p-metric-store-pivnet-metadata
  type: gcs-resource
  source:
    bucket: p-metric-store-release
    json_key: ((release-credentials.yml/Notes/gcp-service-account-key))
    versioned_file: pivnet/metadata.yml

- name: gcp-light-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-xenial-go_agent
    version_family: 250.latest
    tarball: true
    preserve_filename: true

- name: hourly-during-the-workday
  type: time
  source:
    location: America/Denver
    interval: 1h
    start: 7:00 AM
    stop: 7:00 PM
    days: [Monday, Tuesday, Wednesday, Thursday, Friday]

jobs:
###############################################################################
# LOG CACHE
###############################################################################
- name: log-cache-cli-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: log-cache-ci
    - get: log-cache-cli
      trigger: true
    - get: notification-cli-tests-version
      params: { bump: patch }
  - task: create-slack-message
    file: log-cache-ci/tasks/alert-message-create/task.yml
    input_mapping: { slack-rate-limit-version: notification-cli-tests-version }
    params:
      TITLE: Log Cache CLI Tests
  - task: run-tests
    file: log-cache-ci/tasks/go-test-module/task.yml
    input_mapping:
      source-repo: log-cache-cli
  on_failure:
    do:
    - put: notification-cli-tests-version
      params: { file: notification-cli-tests-version/version }
    - task: enable-disable-alert-failure
      file: log-cache-ci/tasks/enable-disable-alert-failure/task.yml
      input_mapping: { slack-rate-limit-version: notification-cli-tests-version }
      params: { alert_multiple: 5 }
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text_file: modified-metadata/alert_toggle
        attachments_file: modified-metadata/alert_message_failure
  on_success:
    do:
    - task: enable-disable-alert-success
      file: log-cache-ci/tasks/enable-disable-alert-success/task.yml
      input_mapping: { slack-rate-limit-version: notification-cli-tests-version }
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text_file: modified-metadata/alert_toggle
        attachments_file: modified-metadata/alert_message_success
    - put: notification-cli-tests-version
      params: { bump: minor }

- name: log-cache-docker-images
  serial: true
  public: true
  plan:
  - aggregate:
    - get: log-cache-ci
    - get: log-cache-ci-docker-images
      trigger: true
    - get: log-cache-release
      trigger: true
      passed: ["log-cache-bump-submodule"]
  - aggregate:
    - task: build-log-cache-image
      file: log-cache-ci/tasks/build-go-docker-image/task.yml
      input_mapping:
        context-repo: log-cache-ci-docker-images
        source-repo: log-cache-release
      output_mapping:
        build-image: build-log-cache-image
      params:
        CONTEXT_PATH: docker-images/log-cache
        BASE_PACKAGE: code.cloudfoundry.org/log-cache
    - task: build-nozzle-image
      file: log-cache-ci/tasks/build-go-docker-image/task.yml
      input_mapping:
        context-repo: log-cache-ci-docker-images
        source-repo: log-cache-release
      output_mapping:
        build-image: build-nozzle-image
      params:
        CONTEXT_PATH: docker-images/log-cache-nozzle
        BASE_PACKAGE: code.cloudfoundry.org/log-cache
    - task: build-gateway-image
      file: log-cache-ci/tasks/build-go-docker-image/task.yml
      input_mapping:
        context-repo: log-cache-ci-docker-images
        source-repo: log-cache-release
      output_mapping:
        build-image: build-gateway-image
      params:
        CONTEXT_PATH: docker-images/log-cache-gateway
        BASE_PACKAGE: code.cloudfoundry.org/log-cache
    - task: build-scheduler-image
      file: log-cache-ci/tasks/build-go-docker-image/task.yml
      input_mapping:
        context-repo: log-cache-ci-docker-images
        source-repo: log-cache-release
      output_mapping:
        build-image: build-scheduler-image
      params:
        CONTEXT_PATH: docker-images/log-cache-scheduler
        BASE_PACKAGE: code.cloudfoundry.org/log-cache
    - task: build-metric-store-tile-image
      file: log-cache-ci/tasks/build-go-docker-image/task.yml
      input_mapping:
        context-repo: log-cache-ci-docker-images
        source-repo: log-cache-release
      output_mapping:
        build-image: build-metric-store-tile-image
      params:
        CONTEXT_PATH: docker-images/metric-store-tile
        BASE_PACKAGE: code.cloudfoundry.org/log-cache
  - aggregate:
    - put: log-cache-image
      params:
        build: build-log-cache-image/build
        tag: build-log-cache-image/tag
        tag_as_latest: true
        cache: true
        cache_tag: latest
    - put: nozzle-image
      params:
        build: build-nozzle-image/build
        tag: build-nozzle-image/tag
        tag_as_latest: true
        cache: true
        cache_tag: latest
    - put: gateway-image
      params:
        build: build-gateway-image/build
        tag: build-gateway-image/tag
        tag_as_latest: true
        cache: true
        cache_tag: latest
    - put: scheduler-image
      params:
        build: build-scheduler-image/build
        tag: build-scheduler-image/tag
        tag_as_latest: true
        cache: true
        cache_tag: latest
    - put: tile-image
      params:
        build: build-metric-store-tile-image/build
        tag: build-metric-store-tile-image/tag
        tag_as_latest: true
        cache: true
        cache_tag: latest

- name: log-cache-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks-image
    - get: log-cache-ci
    - get: log-cache-release
      trigger: true
    - get: log-cache
      trigger: true
  - task: update-log-cache-submodule
    file: log-cache-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: log-cache-release
      source-repo: log-cache
    output_mapping:
      bumped-release-repo: bumped-log-cache-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/log-cache
  - task: sync-package-specs
    file: log-cache-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: bumped-log-cache-release
    output_mapping:
      updated-release-repo: synced-log-cache-release
    params:
      SCRIPT: scripts/sync-package-specs
  - do:
    - get: notification-log-cache-tests-version
      params: { bump: patch }
    - task: create-slack-message
      file: log-cache-ci/tasks/alert-message-create/task.yml
      input_mapping: { slack-rate-limit-version: notification-log-cache-tests-version }
      params:
        TITLE: Log Cache Bump Submodule
    - task: run-tests
      file: log-cache-ci/tasks/run-release-script/task.yml
      input_mapping:
        release-repo: synced-log-cache-release
      params:
        SCRIPT: scripts/test
  - task: commit
    file: log-cache-ci/tasks/commit-with-shortlog/task.yml
    image: cf-deployment-concourse-tasks-image
    input_mapping:
      release-repo: synced-log-cache-release
    output_mapping:
      committed-repo: committed-log-cache-release
    params:
      PATHS: |
        src/code.cloudfoundry.org/log-cache
        packages
  - put: log-cache-release
    params:
      repository: committed-log-cache-release
      rebase: true
  on_failure:
    do:
    - put: notification-log-cache-tests-version
      params: { file: notification-log-cache-tests-version/version }
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        attachments_file: metadata/alert_message_failure
  on_success:
    do:
    - task: enable-disable-alert-success
      file: log-cache-ci/tasks/enable-disable-alert-success/task.yml
      input_mapping: { slack-rate-limit-version: notification-log-cache-tests-version }
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text_file: modified-metadata/alert_toggle
        attachments_file: modified-metadata/alert_message_success
    - put: notification-log-cache-tests-version
      params: { bump: minor }

- name: p-metric-store-unit-tests
  serial: true
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks-image
    - get: log-cache-ci
    - get: p-metric-store-release
      trigger: true
    - get: p-metric-store
      trigger: true
  - task: create-slack-message
    file: log-cache-ci/tasks/alert-message-create/task.yml
    params:
      TITLE: Pivotal Metric Store Unit Tests
  - task: run-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: logcache/base
      inputs:
        - name: p-metric-store-release
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -ex
            pushd p-metric-store-release
              scripts/test unit
            popd
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        attachments_file: metadata/alert_message_failure

- name: bump-oss-metric-store
  serial: true
  plan:
  - aggregate:
    - get: log-cache-ci
    - get: p-metric-store-release
      passed: [p-metric-store-unit-tests]
      trigger: true
    - get: oss-metric-store
      passed: [oss-metric-store-unit-tests]
      trigger: true
  - task: create-slack-message
    file: log-cache-ci/tasks/alert-message-create/task.yml
    params:
      TITLE: Pivotal Metric Store Bump OSS Metric Store
  - task: bump-oss-metric-store
    file: log-cache-ci/tasks/bump-oss-metric-store/task.yml
    params:
      GITHUB_PRIVATE_KEY: ((github-key-ci.yml/Notes/github_key))
  - put: p-metric-store-release
    params:
      repository: bumped-p-metric-store-release
  - try:
      task: run-tests
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: logcache/base
        inputs:
          - name: bumped-p-metric-store-release
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -ex
              pushd bumped-p-metric-store-release
                scripts/test unit
              popd
      on_failure:
        do:
        - task: create-tracker-story
          file: log-cache-ci/tasks/create-tracker-story/task.yml
          input_mapping:
            linked-repo: bumped-p-metric-store-release
          params:
            TRACKER_API_TOKEN: ((tracker-key-ci.yml/Notes/tracker_api_token))
            TRACKER_PROJECT_ID: "2205790"
            TRACKER_STORY_TYPE: bug
            TRACKER_STORY_NAME: "Fix p-metric-store-release tests due to OSS Metric Store auto-bump"
            TRACKER_STORY_DESCRIPTION: "The tests are failing due to an OSS Metric Store auto-bump."
            GITHUB_REPO: "pivotal/metric-store-release"
        - put: slack-alert
          params:
            silent: true
            username: ((slack-ci.yml/Notes/slack_alert_username))
            icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
            channel: ((slack-ci.yml/Notes/slack_alert_channel))
            attachments_file: metadata/alert_message_failure

- name: log-cache-acceptance-tests-release-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks-image
    - get: log-cache-ci
    - get: log-cache
      trigger: true
    - get: log-cache-acceptance-tests-release
      trigger: true
    - get: log-cache-acceptance-tests
      trigger: true
  - task: create-slack-message
    file: log-cache-ci/tasks/alert-message-create/task.yml
    params:
      TITLE: LCATS Release Bump Submodule
  - task: update-log-cache-submodule
    file: log-cache-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: log-cache-acceptance-tests-release
      source-repo: log-cache
    output_mapping:
      bumped-release-repo: log-cache-acceptance-tests-release-with-bumped-log-cache
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/log-cache
  - task: update-log-cache-acceptance-tests-submodule
    file: log-cache-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: log-cache-acceptance-tests-release-with-bumped-log-cache
      source-repo: log-cache-acceptance-tests
    output_mapping:
      bumped-release-repo: log-cache-acceptance-tests-release-with-bumped-log-cache-acceptance-tests
    params:
      SUBMODULE_PATH: src/github.com/cloudfoundry/log-cache-acceptance-tests
  - task: sync-package-specs
    file: log-cache-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: log-cache-acceptance-tests-release-with-bumped-log-cache-acceptance-tests
    output_mapping:
      updated-release-repo: synced-log-cache-acceptance-tests-release
    params:
      SCRIPT: scripts/sync-package-specs
  - task: commit
    file: log-cache-ci/tasks/commit-with-shortlog/task.yml
    image: cf-deployment-concourse-tasks-image
    input_mapping:
      release-repo: synced-log-cache-acceptance-tests-release
    output_mapping:
      committed-repo: committed-log-cache-acceptance-tests-release
    params:
      PATHS: |
        src
        packages
  - put: log-cache-acceptance-tests-release
    params:
      repository: committed-log-cache-acceptance-tests-release
      rebase: true
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        attachments_file: metadata/alert_message_failure

- name: create-p-metric-store-dev-release
  serial: true
  plan:
    - aggregate:
      - get: log-cache-ci
      - get: p-metric-store-release
        trigger: true
        passed: ["bump-oss-metric-store"]
      - get: p-metric-store-dev-release-version
        params: { pre: dev }
      - get: cf-deployment-concourse-tasks-image
      - get: golang-release
    - task: create-dev-release
      file: log-cache-ci/tasks/create-dev-release/task.yml
      image: cf-deployment-concourse-tasks-image
      input_mapping:
        bosh-dev-release-dir: p-metric-store-release
        bosh-dev-release-version: p-metric-store-dev-release-version
      params:
        JSON_KEY: ((release-credentials.yml/Notes/gcp-service-account-key))
    - put: p-metric-store-dev-release
      params:
        file: metric-store-dev-release/release-*.tgz
        content_type: application/octet-stream
    - put: p-metric-store-dev-release-version
      params: { file: bosh-new-dev-release-version/version }

- name: oss-metric-store-unit-tests
  serial: true
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks-image
    - get: log-cache-ci
    - get: oss-metric-store
      trigger: true
  - task: create-slack-message
    file: log-cache-ci/tasks/alert-message-create/task.yml
    params:
      TITLE: OSS Metric Store Unit Tests
  - task: run-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: logcache/base
      inputs:
        - name: oss-metric-store
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -ex
            pushd oss-metric-store
              scripts/test unit
            popd
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        attachments_file: metadata/alert_message_failure

- name: create-oss-metric-store-dev-release
  serial: true
  plan:
    - aggregate:
      - get: log-cache-ci
      - get: oss-metric-store
        trigger: true
        passed: ["oss-metric-store-unit-tests"]
      - get: oss-metric-store-dev-release-version
        params: { pre: dev }
      - get: cf-deployment-concourse-tasks-image
      - get: golang-release
    - task: create-dev-release
      file: log-cache-ci/tasks/create-dev-release/task.yml
      image: cf-deployment-concourse-tasks-image
      input_mapping:
        bosh-dev-release-dir: oss-metric-store
        bosh-dev-release-version: oss-metric-store-dev-release-version
      params:
        JSON_KEY: ((release-credentials.yml/Notes/gcp-service-account-key))
        OSS_RELEASE: true
    - put: oss-metric-store-dev-release
      params:
        file: metric-store-dev-release/release-*.tgz
        content_type: application/octet-stream
    - put: oss-metric-store-dev-release-version
      params: { file: bosh-new-dev-release-version/version }

- name: cf-deploy
  serial_groups: [cf-deploy]
  plan:
  - aggregate:
    - get: log-cache-ci
    - get: bbl-state
      resource: denver-locks
    - get: cf-deployment
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-concourse-tasks-image
    - get: notification-cf-deploy-version
      params: { bump: patch }
  - task: create-slack-message
    file: log-cache-ci/tasks/alert-message-create/task.yml
    input_mapping: { slack-rate-limit-version: notification-cf-deploy-version }
    params:
      TITLE: Log Cache CF Deploy
  - aggregate:
    - do:
      - get: log-cache-release
        trigger: true
        passed: ["log-cache-bump-submodule"]
      - task: upload-log-cache-release
        file: log-cache-ci/tasks/upload-release/task.yml
        image: cf-deployment-concourse-tasks-image
        input_mapping:
          bosh-release-dir: log-cache-release
        params:
          BBL_STATE_DIR: ((bbl_state_dir))
          JSON_KEY: ((release-credentials.yml/Notes/gcp-service-account-key))
    - do:
      - get: p-metric-store-release
        passed: ["create-p-metric-store-dev-release"]
      - get: p-metric-store-dev-release
        trigger: true
        passed: ["create-p-metric-store-dev-release"]
      - task: upload-p-metric-store-release
        file: log-cache-ci/tasks/upload-dev-release/task.yml
        image: cf-deployment-concourse-tasks-image
        input_mapping:
          bosh-release-tarball: p-metric-store-dev-release
        params:
          BBL_STATE_DIR: ((bbl_state_dir))
    - do:
      - get: oss-metric-store
        passed: ["create-oss-metric-store-dev-release"]
      - get: oss-metric-store-dev-release
        trigger: true
        passed: ["create-oss-metric-store-dev-release"]
      - task: upload-oss-metric-store-release
        file: log-cache-ci/tasks/upload-dev-release/task.yml
        image: cf-deployment-concourse-tasks-image
        input_mapping:
          bosh-release-tarball: oss-metric-store-dev-release
        params:
          BBL_STATE_DIR: ((bbl_state_dir))
    - do:
      - get: grafana-boshrelease
      - task: upload-grafana-release
        file: log-cache-ci/tasks/upload-release/task.yml
        image: cf-deployment-concourse-tasks-image
        input_mapping:
          bosh-release-dir: grafana-boshrelease
        params:
          BBL_STATE_DIR: ((bbl_state_dir))
    - do:
      - get: metric-registrar-release
      - task: upload-metric-registrar-release
        file: log-cache-ci/tasks/upload-release-tarball/task.yml
        image: cf-deployment-concourse-tasks-image
        input_mapping:
          release-tarball: metric-registrar-release
        params:
          BBL_STATE_DIR: ((bbl_state_dir))
          RELEASE_TARBALL_GLOB: "release-*"

  - task: copy-ops-files
    image: cf-deployment-concourse-tasks-image
    config:
      platform: linux
      inputs:
      - name: bbl-state
      - name: cf-deployment
      - name: log-cache-ci
      - name: oss-metric-store
      outputs:
      - name: ops-files
      params:
        ENV_NAME: ((env_name))
        SYS_DOMAIN: ((sys_domain))
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          set -e

          cp cf-deployment/operations/use-compiled-releases.yml ops-files
          cp cf-deployment/operations/scale-to-one-az.yml ops-files
          cp cf-deployment/operations/experimental/add-system-metrics-agent.yml ops-files
          cp cf-deployment/operations/experimental/add-metric-store.yml ops-files
          cp log-cache-ci/ops-files/grafana-in-cf.yml ops-files
          cp log-cache-ci/ops-files/add-grafana-uaa-clients.yml ops-files
          cp log-cache-ci/ops-files/enable-grafana-uaa.yml ops-files
          cp log-cache-ci/ops-files/metric-registrar-in-cf.yml ops-files
          cp log-cache-ci/ops-files/metric-store-in-cf.yml ops-files
          cp log-cache-ci/ops-files/p-metric-store-in-cf.yml ops-files
          cp log-cache-ci/ops-files/awaiting-cf-deployment-prs.yml ops-files
          cp log-cache-ci/ops-files/bosh-speed.yml ops-files
          cp log-cache-ci/ops-files/test-clients.yml ops-files
          cp log-cache-ci/ops-files/scale-loggregator-components-up.yml ops-files
          cp log-cache-ci/ops-files/use-latest.yml ops-files
          erb log-cache-ci/ops-files/msats.yml.erb > ops-files/msats.yml

  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    params:
      BBL_STATE_DIR: ((bbl_state_dir))
  - task: cf-deploy
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      vars-files: bbl-state
    params:
      BBL_STATE_DIR: ((bbl_state_dir))
      SYSTEM_DOMAIN: ((sys_domain))
      OPS_FILES: |
        use-compiled-releases.yml
        scale-to-one-az.yml
        add-system-metrics-agent.yml
        scale-loggregator-components-up.yml
        test-clients.yml
        bosh-speed.yml
        add-metric-store.yml
        metric-store-in-cf.yml
        p-metric-store-in-cf.yml
        awaiting-cf-deployment-prs.yml
        use-latest.yml
        grafana-in-cf.yml
        add-grafana-uaa-clients.yml
        enable-grafana-uaa.yml
        metric-registrar-in-cf.yml
        msats.yml
  - task: enable-feature-flags
    file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
    params:
      BBL_STATE_DIR: ((bbl_state_dir))
      SYSTEM_DOMAIN: ((sys_domain))
      ENABLED_FEATURE_FLAGS: diego_docker
  - task: cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: ((bbl_state_dir))
  - task: create-test-space
    file: log-cache-ci/tasks/create-org-and-space/task.yml
    params:
      BBL_STATE_DIR: ((bbl_state_dir))
      ORG: test
      SPACE: test
      SYSTEM_DOMAIN: ((sys_domain))
  on_failure:
    do:
    - put: notification-cf-deploy-version
      params: { file: notification-cf-deploy-version/version }
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        attachments_file: metadata/alert_message_failure
    - task: enable-disable-alert-failure
      file: log-cache-ci/tasks/enable-disable-alert-failure/task.yml
      input_mapping: { slack-rate-limit-version: notification-cf-deploy-version }
      params: { alert_multiple: 5, ignore_first: true }
    - put: slack-high-visibility-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_high_visibility_alert_channel))
        text_file: modified-metadata/alert_toggle
        attachments_file: modified-metadata/alert_message_failure
  on_success:
    do:
    - task: enable-disable-alert-success
      file: log-cache-ci/tasks/enable-disable-alert-success/task.yml
      input_mapping: { slack-rate-limit-version: notification-cf-deploy-version }
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text_file: modified-metadata/alert_toggle
        attachments_file: modified-metadata/alert_message_success
    - put: notification-cf-deploy-version
      params: { bump: minor }

- name: p-ms-üö¨
  serial: true
  plan:
  - aggregate:
    - get: log-cache-ci
    - get: cf-deployment-concourse-tasks-image
    - get: denver-locks
    - get: cf-deployment-concourse-tasks
    - get: p-metric-store-release
      trigger: true
      passed: ["cf-deploy"]
  - task: create-slack-message
    file: log-cache-ci/tasks/alert-message-create/task.yml
    params:
      TITLE: P-Metric-Store Smoke Tests
  - task: run-msats
    file: log-cache-ci/tasks/run-errand/task.yml
    image: cf-deployment-concourse-tasks-image
    params:
      BBL_STATE_DIR: ((bbl_state_dir))
      DEPLOYMENT_NAME: cf
      ERRAND: metric-store-smoke-tests
      INSTANCE: p-metric-store/0
      KEEP_ALIVE: true
    input_mapping:
      bbl-state: denver-locks
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        attachments_file: metadata/alert_message_failure

- name: "ü•ñ Bake Tile üç∞"
  plan:
    - aggregate:
      - get: concourse-tasks
      - get: log-cache-ci
      - get: p-metric-store-release
        passed: ["create-p-metric-store-dev-release"]
      - get: oss-metric-store-dev-release
        passed: ["create-oss-metric-store-dev-release"]
      - get: p-metric-store-version
        params:
          pre: build
      - get: p-metric-store-dev-release
        trigger: true
        passed: ["create-p-metric-store-dev-release"]
      - get: pcf-observability-ci-image
      attempts: 3
    - task: "bake tile"
      image: pcf-observability-ci-image
      file: log-cache-ci/tasks/tile_bake/task.yml
      input_mapping:
        metric-store-release: p-metric-store-release
        metric-store-dev-release: p-metric-store-dev-release
        oss-metric-store-release: oss-metric-store-dev-release
        tile-version: p-metric-store-version
    - put: temp-baked-tile
      params:
        file: baked-tile/*.pivotal
        content_type: application/octet-stream
  ensure:
    put: p-metric-store-version
    params:
      file: new-tile-version/version

- name: "üöΩ Install Tile üçæ"
  plan:
    - aggregate:
      - get: bobble
      - get: concourse-tasks
      - get: log-cache-ci
      - get: log-cache-deployments
      - get: p-metric-store-release
        passed: ["ü•ñ Bake Tile üç∞"]
      - get: oss-metric-store-dev-release
        passed: ["ü•ñ Bake Tile üç∞"]
      - get: p-metric-store-dev-release
        passed: ["ü•ñ Bake Tile üç∞"]
      - get: pcf-observability-ci-image
      - get: p-metric-store-version
        passed: ["ü•ñ Bake Tile üç∞"]
      - get: temp-baked-tile
        trigger: true
        passed: ["ü•ñ Bake Tile üç∞"]
      attempts: 3
    - task: "prepare deployment environment"
      file: bobble/ci-tasks/prepare-environment/prepare-environment.yml
      input_mapping:
        src: log-cache-deployments
      params:
        ENV_PATH: gcp/optimus
    - task: "install tile"
      image: pcf-observability-ci-image
      file: log-cache-ci/tasks/tile_install/task.yml
      input_mapping:
        deployment-tools: bobble
        tile-config: log-cache-ci
        tile-version: p-metric-store-version
        baked-tile: temp-baked-tile
      params:
        OPSMAN_USER: ((log-cache-ops-manager/Username))
        OPSMAN_PASSWORD: ((log-cache-ops-manager/Password))
        STEMCELL_URL: https://s3.amazonaws.com/bosh-gce-light-stemcells/light-bosh-stemcell-250.38-google-kvm-ubuntu-xenial-go_agent.tgz
        STEMCELL_SHA: 014426acb722365a5c48ab731a797e92cbc0eb37
        PRODUCT_CONFIG_PATH: tile-config/tile/metric-store-config.yml

<% envs_we_care_about.each do |env_version, pool_name| %>
- name: "Install on PCF <%= env_version %>"
  plan:
  - aggregate:
    - get: concourse-tasks
    - get: log-cache-ci
    - get: p-metric-store-release
      passed: ["ü•ñ Bake Tile üç∞"]
    - get: oss-metric-store-dev-release
      passed: ["ü•ñ Bake Tile üç∞"]
    - get: p-metric-store-dev-release
      passed: ["ü•ñ Bake Tile üç∞"]
    - get: pcf-observability-ci-image
    - get: p-metric-store-version
      passed: ["ü•ñ Bake Tile üç∞"]
    - get: temp-baked-tile
      trigger: true
      passed: ["ü•ñ Bake Tile üç∞"]
    - get: gcp-light-stemcell
    attempts: 3
  - task: "Claim Smith Env"
    tags: [ cf-log-cache-vsphere ]
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: logcache/metric-store-tile
      outputs:
      - name: environment
      run:
        path: sh
        args:
        - "-c"
        - |
          set -eu
          # exports smith environment name to `env`
          $(smith claim -p <%= pool_name %> -n "cf-metric-store CI" | tail -1)
          echo "Claimed smith environment: ${env}"
          echo ${env} > environment/name
    attempts: 3
    on_failure:
      task: release-env
      tags: [ cf-log-cache-vsphere ]
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: logcache/base
        run:
          path: sh
          args:
          - "-c"
          - |
            set -e
            sleep 10
    params:
      TOOLSMITHS_API_TOKEN: ((smith-token-cf-denver/Notes))
  - task: "Upload and Install"
    tags: [ cf-log-cache-vsphere ]
    input_mapping:
      tile-version: p-metric-store-version
      baked-tile: temp-baked-tile
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: logcache/metric-store-tile
      inputs:
      - name: baked-tile
      - name: gcp-light-stemcell
      - name: tile-version
      - name: environment
      outputs:
      - name: environment
      run:
        path: sh
        args:
        - "-c"
        - |
          set -eu
          export env=$(cat environment/name)

          export TILE_FILE=$(echo "$(set -- baked-tile/*.pivotal; echo "$1")")
          export RELEASE_VERSION=$(cat tile-version/version)
          export STEMCELL_FILE=$(cat gcp-light-stemcell/url | cut -d / -f 6)
          mv gcp-light-stemcell/stemcell.tgz gcp-light-stemcell/${STEMCELL_FILE}
          smith om upload-product -- --product ${TILE_FILE}
          smith om stage-product -- --product-name "p-metric-store" --product-version ${RELEASE_VERSION}
          smith read > environment/metadata
          # get the azs and network from that file
          target=$(jq -r .ops_manager.url < environment/metadata)
          ert_subnet=$(jq -r .ert_subnet < environment/metadata)
          zone_1=$(jq -r .azs[0] < environment/metadata)
          zone_2=$(jq -r .azs[1] < environment/metadata)
          zone_3=$(jq -r .azs[2] < environment/metadata)
          cat > metric-store-tile-config.yml <<EOF
          ---
          product-name: p-metric-store
          network-properties:
            network:
              name: ${ert_subnet}
            other_availability_zones:
              - name: ${zone_1}
              - name: ${zone_2}
              - name: ${zone_3}
            singleton_availability_zone:
              name: ${zone_1}
          EOF


          smith om configure-product -- --config metric-store-tile-config.yml
          smith om upload-stemcell -- --stemcell gcp-light-stemcell/${STEMCELL_FILE} -- --floating true
          smith om apply-changes -- --product-name "p-metric-store"
    params:
      TOOLSMITHS_API_TOKEN: ((smith-token-cf-denver/Notes))
    on_success:
      task: release-env
      tags: [ cf-log-cache-vsphere ]
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: logcache/metric-store-tile
        inputs:
        - name: environment
        run:
          path: sh
          args:
          - "-c"
          - |
            set -e
            smith unclaim -e $(cat environment/name)
      params:
        TOOLSMITHS_API_TOKEN: ((smith-token-cf-denver/Notes))
<% end %>
- name: lcats
  serial_groups: [cf-deploy]
  plan:
  - aggregate:
    - get: log-cache-release
      passed:
      - cf-deploy
      trigger: true
    - get: denver-locks
    - get: log-cache-ci
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-concourse-tasks-image
    - get: log-cache-acceptance-tests-release
      trigger: true
      passed: ["log-cache-acceptance-tests-release-bump-submodule"]
  - task: create-slack-message
    file: log-cache-ci/tasks/alert-message-create/task.yml
    params:
      TITLE: LCATS
  - task: upload-lcats
    file: log-cache-ci/tasks/upload-release/task.yml
    image: cf-deployment-concourse-tasks-image
    params:
      BBL_STATE_DIR: ((bbl_state_dir))
    input_mapping:
      bbl-state: denver-locks
      bosh-release-dir: log-cache-acceptance-tests-release
  - task: create-ops-files
    image: cf-deployment-concourse-tasks-image
    config:
      platform: linux
      inputs:
      - name: log-cache-ci
      outputs:
      - name: ops-files
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          set -e
          erb log-cache-ci/ops-files/lcats.yml.erb > ops-files/lcats.yml
    params:
      ENV_NAME: ((env_name))
      SYS_DOMAIN: ((sys_domain))
  - task: lcats-deploy
    file: log-cache-ci/tasks/bosh-deploy/task.yml
    image: cf-deployment-concourse-tasks-image
    params:
      BBL_STATE_DIR: ((bbl_state_dir))
      DEPLOYMENT_NAME: lcats
      MANIFEST_FILE: manifests/manifest.yml
      OPS_FILES: lcats.yml
    input_mapping:
      bbl-state: denver-locks
      bosh-release: log-cache-acceptance-tests-release
      ops-files: ops-files
      vars-files: ops-files
  - task: run-lcats
    file: log-cache-ci/tasks/run-errand/task.yml
    image: cf-deployment-concourse-tasks-image
    params:
      BBL_STATE_DIR: ((bbl_state_dir))
      DEPLOYMENT_NAME: lcats
      ERRAND: lcats
      KEEP_ALIVE: true
    input_mapping:
      bbl-state: denver-locks
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        attachments_file: metadata/alert_message_failure

- name: cats
  serial_groups: [cf-deploy]
  plan:
  - aggregate:
    - get: log-cache-release
      passed:
      - cf-deploy
      trigger: true
    - get: denver-locks
    - get: log-cache-ci
    - get: cf-acceptance-tests
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-concourse-tasks-image
    - get: bbl-state
      resource: denver-locks
  - task: create-slack-message
    file: log-cache-ci/tasks/alert-message-create/task.yml
    params:
      TITLE: CATS
  - task: integration-config
    file: log-cache-ci/tasks/create-integration-config/task.yml
    image: cf-deployment-concourse-tasks-image
    params:
      BBL_STATE_DIR: ((bbl_state_dir))
      SYSTEM_DOMAIN: ((sys_domain))
  - task: cats
    file: cf-deployment-concourse-tasks/run-cats/task.yml
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        attachments_file: metadata/alert_message_failure

- name: log-cache-cli-integration-tests
  serial_groups: [cf-deploy]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-concourse-tasks-image
    - get: log-cache-ci
    - get: log-cache-cli
      passed: [ log-cache-cli-tests ]
      trigger: true
    - get: notification-cli-integration-tests-version
      params: { bump: patch }
    - get: bbl-state
      resource: denver-locks
      passed: [ lcats ]
      trigger: true
  - task: create-slack-message
    file: log-cache-ci/tasks/alert-message-create/task.yml
    input_mapping: { slack-rate-limit-version: notification-cli-integration-tests-version }
    params:
      TITLE: Log Cache CLI Integration Tests
  - task: create-test-space
    file: log-cache-ci/tasks/create-org-and-space/task.yml
    params:
      BBL_STATE_DIR: ((bbl_state_dir))
      ORG: integration-tests
      SPACE: integration-tests
      SYSTEM_DOMAIN: ((sys_domain))
  - task: run-integration-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: logcache/base
      inputs:
        - name: bbl-state
        - name: cf-deployment-concourse-tasks
        - name: log-cache-cli
      params:
        BBL_STATE_DIR: ((bbl_state_dir))
        SYSTEM_DOMAIN: ((sys_domain))
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -exuo pipefail

            source cf-deployment-concourse-tasks/shared-functions

            setup_bosh_env_vars

            cf api api.${SYSTEM_DOMAIN} --skip-ssl-validation
            (set +x; cf auth admin "$(get_password_from_credhub cf_admin_password)")

            CF_ORG=integration-tests CF_SPACE=integration-tests \
              log-cache-cli/scripts/integration-tests.sh
  on_failure:
    do:
    - put: notification-cli-integration-tests-version
      params: { file: notification-cli-integration-tests-version/version }
    - task: enable-disable-alert-failure
      file: log-cache-ci/tasks/enable-disable-alert-failure/task.yml
      input_mapping: { slack-rate-limit-version: notification-cli-integration-tests-version }
      params: { alert_multiple: 5 }
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text_file: modified-metadata/alert_toggle
        attachments_file: modified-metadata/alert_message_failure
  on_success:
    do:
    - task: enable-disable-alert-success
      file: log-cache-ci/tasks/enable-disable-alert-success/task.yml
      input_mapping: { slack-rate-limit-version: notification-cli-integration-tests-version }
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text_file: modified-metadata/alert_toggle
        attachments_file: modified-metadata/alert_message_success
    - put: notification-cli-integration-tests-version
      params: { bump: minor }

- name: log-cache-release-elect-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: log-cache-release
      trigger: true
      passed: ["lcats"]
    - get: log-cache-release-elect
  - put: log-cache-release-elect
    params:
      repository: develop

- name: log-cache-cli-promotion
  serial: true
  plan:
  - aggregate:
    - get: log-cache-cli
      passed: [ log-cache-cli-integration-tests ]
      trigger: true
    - get: log-cache-cli-master
    - get: bumper-tool
    - get: log-cache-ci
  - task: bumper
    file: log-cache-ci/tasks/bumper/task.yml
    input_mapping:
      source: log-cache-cli
      dest: log-cache-cli-master
    params:
      SOURCE_BRANCH: develop
      DEST_BRANCH: master
  - put: log-cache-cli-master
    params:
      repository: merged-dest

- name: log-cache-master-promotion
  serial: true
  plan:
  - aggregate:
    - get: hourly-during-the-workday
      trigger: true
    - get: log-cache-release-elect
      passed: ["log-cache-release-elect-promotion"]
      trigger: true
    - get: log-cache-release-master
    - get: bumper-tool
    - get: log-cache-ci
  - task: bumper
    file: log-cache-ci/tasks/bumper/task.yml
    input_mapping:
      source: log-cache-release-elect
      dest: log-cache-release-master
    params:
      SOURCE_BRANCH: release-elect
      DEST_BRANCH: master
      FOLLOW_BUMPS_OF: src/code.cloudfoundry.org/log-cache
  - put: log-cache-release-master
    params:
      repository: merged-dest

- name: p-metric-store-test-gate
  serial: true
  plan:
    - aggregate:
      - get: develop
        resource: p-metric-store-release
        trigger: true
        passed:
          - "p-ms-üö¨"
          - "üöΩ Install Tile üçæ"
          <% envs_we_care_about.each do |name, _| %>
          - "Install on PCF <%= name %>"
          <% end %>

- name: p-metric-store-release-elect-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: p-metric-store-release
      trigger: true
      passed:
        - p-metric-store-test-gate
    - get: p-metric-store-release
    - get: p-metric-store-release-elect
    - get: oss-metric-store-release-master
    - get: log-cache-ci
  - task: bump
    file: log-cache-ci/tasks/pre-bumper/task.yml
  - put: p-metric-store-release-elect
    params:
      repository: bumped-p-metric-store-release-elect

- name: p-metric-store-master-promotion
  serial: true
  plan:
  - aggregate:
    - get: hourly-during-the-workday
      trigger: true
    - get: p-metric-store-release
      passed: ["p-metric-store-release-elect-promotion"]
    - get: p-metric-store-release-elect
      passed: ["p-metric-store-release-elect-promotion"]
      trigger: true
    - get: p-metric-store-release-master
    - get: bumper-tool
    - get: log-cache-ci
  - task: bumper
    file: log-cache-ci/tasks/bumper/task.yml
    input_mapping:
      source: p-metric-store-release-elect
      dest: p-metric-store-release-master
    params:
      SOURCE_BRANCH: release-elect
      DEST_BRANCH: master
      FOLLOW_BUMPS_OF: src/github.com/pivotal/metric-store
      TRACKER_API_TOKEN: ((tracker-key-ci.yml/Notes/tracker_api_token))
  - put: p-metric-store-release-master
    params:
      repository: merged-dest

- name: oss-ms-üö¨
  serial: true
  plan:
  - aggregate:
    - get: log-cache-ci
    - get: cf-deployment-concourse-tasks-image
    - get: denver-locks
    - get: cf-deployment-concourse-tasks
    - get: oss-metric-store-release
      resource: oss-metric-store
      trigger: true
      passed: ["cf-deploy"]
  - task: create-slack-message
    file: log-cache-ci/tasks/alert-message-create/task.yml
    params:
      TITLE: OSS Metric Store Smoke Tests
  - task: run-msats
    file: log-cache-ci/tasks/run-errand/task.yml
    image: cf-deployment-concourse-tasks-image
    params:
      BBL_STATE_DIR: ((bbl_state_dir))
      DEPLOYMENT_NAME: cf
      ERRAND: metric-store-smoke-tests
      INSTANCE: metric-store/0
      KEEP_ALIVE: true
    input_mapping:
      bbl-state: denver-locks
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        attachments_file: metadata/alert_message_failure

- name: oss-metric-store-release-elect-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: oss-metric-store
      trigger: true
      passed: ["oss-ms-üö¨"]
  - get: oss-metric-store-release-elect
  - put: oss-metric-store-release-elect
    params:
      repository: develop

- name: oss-metric-store-master-promotion
  serial: true
  plan:
  - aggregate:
    - get: hourly-during-the-workday
      trigger: true
    - get: oss-metric-store-release-elect
      passed: ["oss-metric-store-release-elect-promotion"]
      trigger: true
    - get: oss-metric-store-release-master
    - get: bumper-tool
    - get: log-cache-ci
  - task: bumper
    file: log-cache-ci/tasks/bumper/task.yml
    input_mapping:
      source: oss-metric-store-release-elect
      dest: oss-metric-store-release-master
    params:
      SOURCE_BRANCH: release-elect
      DEST_BRANCH: master
      FOLLOW_BUMPS_OF: src/github.com/pivotal/metric-store
      TRACKER_API_TOKEN: ((tracker-key-ci.yml/Notes/tracker_api_token))
  - put: oss-metric-store-release-master
    params:
      repository: merged-dest

- name: ü•ñ Bake Final Tile ü•ñ
  plan:
  - aggregate:
    - get: p-metric-store-release-master
      passed:
        - p-metric-store-master-promotion
    - get: oss-metric-store-release-master
      passed:
        - oss-metric-store-master-promotion
    - get: p-metric-store-pivnet-metadata
    - get: pcf-observability-ci-image
    - get: log-cache-ci
  - task: bake-final-tile
    image: pcf-observability-ci-image
    input_mapping:
      oss-metric-store-release-repo: oss-metric-store-release-master
      p-metric-store-release-repo: p-metric-store-release-master
      pivnet-metadata: p-metric-store-pivnet-metadata
    file: log-cache-ci/tasks/tile_bake_final/task.yml
    params:
      JSON_KEY: ((release-credentials.yml/Notes/gcp-service-account-key))
  - put: freshly-baked-final-tiles
    params:
      file: baked-tile/*.pivotal
      content_type: application/octet-stream

- name: üöÄ Push to Pivnet üöÄ
  plan:
  - get: freshly-baked-final-tiles
    passed:
    - "ü•ñ Bake Final Tile ü•ñ"
#  - task: check-release-version-not-on-piv
#  - task: push-to-piv



- name: log-cache-tools-tests
  serial: true
  plan:
  - aggregate:
    - get: log-cache-ci
    - get: log-cache-tools
      trigger: true
    - get: notification-tools-tests-version
      params: { bump: patch }
  - task: create-slack-message
    file: log-cache-ci/tasks/alert-message-create/task.yml
    input_mapping: { slack-rate-limit-version: notification-tools-tests-version }
    params:
      TITLE: Log Cache Tools Tests
  - task: run-tests
    file: log-cache-ci/tasks/go-test-module-with-mod/task.yml
    input_mapping:
      source-repo: log-cache-tools
    params:
      GITHUB_PRIVATE_KEY: ((github-key-ci.yml/Notes/github_key))
      SUB_FOLDERS: |
        lc-datadog-forwarder
        log-cache-emitter
        ms-datadog-forwarder
  on_failure:
    do:
    - put: notification-tools-tests-version
      params: { file: notification-tools-tests-version/version }
    - task: enable-disable-alert-failure
      file: log-cache-ci/tasks/enable-disable-alert-failure/task.yml
      input_mapping: { slack-rate-limit-version: notification-tools-tests-version }
      params: { alert_multiple: 5 }
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text_file: modified-metadata/alert_toggle
        attachments_file: modified-metadata/alert_message_failure
  on_success:
    do:
    - task: enable-disable-alert-success
      file: log-cache-ci/tasks/enable-disable-alert-success/task.yml
      input_mapping: { slack-rate-limit-version: notification-tools-tests-version }
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text_file: modified-metadata/alert_toggle
        attachments_file: modified-metadata/alert_message_success
    - put: notification-tools-tests-version
      params: { bump: minor }
