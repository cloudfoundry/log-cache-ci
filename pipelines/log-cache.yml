groups:
- name: all
  jobs:
  - cf-deploy
  - lcats
  - cats
  - log-cache-tests
  - log-cache-docker-images
  - log-cache-bump-submodule
  - log-cache-release-elect-promotion
  - log-cache-master-promotion
  - log-cache-acceptance-tests-release-bump-submodule
- name: log-cache-cli
  jobs:
  - log-cache-cli-tests
  - log-cache-cli-promotion
- name: leadership-election
  jobs:
  - leadership-election-tests
  - leadership-election-bump-submodule

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: 10m
  type: time
  source:
    interval: 10m

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    branch: master

- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    branch: v7.6

- name: cf-deployment-concourse-tasks-image
  type: docker-image
  source:
    repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
    tag: v5.20.0

- name: log-cache-deployments
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-deployments.git
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: log-cache-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/log-cache-acceptance-tests
    branch: master

- name: log-cache-acceptance-tests-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-acceptance-tests-release
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: cf-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-acceptance-tests
    branch: master

- name: log-cache-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-ci
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: log-cache-ci-docker-images
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-ci
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))
    paths:
    - docker-images

- name: log-cache-image
  type: docker-image
  source:
    repository: logcache/log-cache
    username: ((docker-hub-ci.yml/Notes/docker-hub-username))
    password: ((docker-hub-ci.yml/Notes/docker-hub-password))

- name: scheduler-image
  type: docker-image
  source:
    repository: logcache/log-cache-scheduler
    username: ((docker-hub-ci.yml/Notes/docker-hub-username))
    password: ((docker-hub-ci.yml/Notes/docker-hub-password))

- name: nozzle-image
  type: docker-image
  source:
    repository: logcache/log-cache-nozzle
    username: ((docker-hub-ci.yml/Notes/docker-hub-username))
    password: ((docker-hub-ci.yml/Notes/docker-hub-password))

- name: gateway-image
  type: docker-image
  source:
    repository: logcache/log-cache-gateway
    username: ((docker-hub-ci.yml/Notes/docker-hub-username))
    password: ((docker-hub-ci.yml/Notes/docker-hub-password))

- name: log-cache-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-release
    branch: develop
    private_key: ((github-key-ci.yml/Notes/github_key))
    ignore_paths:
    - .final_builds
    - releases
    disable_ci_skip: false

- name: log-cache-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-release
    branch: release-elect
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: log-cache-release-master
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-release
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))
    disable_ci_skip: true

- name: log-cache
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: log-cache-cli
  type: git
  source:
    uri: https://github.com/cloudfoundry/log-cache-cli
    branch: develop

- name: log-cache-cli-master
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-cli
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: bumper-tool
  type: git
  source:
    uri: https://github.com/loggregator/bumper

- name: leadership-election
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/leadership-election

- name: leadership-election-release
  type: git
  source:
    branch: develop
    ignore_paths:
    - .final_builds
    - releases
    private_key: ((github-key-ci.yml/Notes/github_key))
    uri: git@github.com:cloudfoundry/leadership-election-release

- name: grafana-boshrelease
  type: git
  source:
    uri: https://github.com/vito/grafana-boshrelease

- name: slack-alert
  type: slack-notification
  source:
    url: ((slack-ci.yml/Notes/slack_alert_webhook_url))

jobs:
###############################################################################
# LOG CACHE
###############################################################################
- name: log-cache-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: log-cache-ci
    - get: log-cache
      trigger: true
  - task: run-tests
    file: log-cache-ci/tasks/go-test-with-latest-packages/task.yml
    input_mapping:
      source-repo: log-cache
    params:
      IMPORT_PATH: code.cloudfoundry.org/log-cache
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text: ((slack-ci.yml/Notes/slack_build_failure_text))

- name: log-cache-cli-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: log-cache-ci
    - get: log-cache-cli
      trigger: true
    - get: 10m
      trigger: true
  - task: run-tests
    file: log-cache-ci/tasks/go-test-with-latest-packages/task.yml
    input_mapping:
      source-repo: log-cache-cli
    params:
      IMPORT_PATH: code.cloudfoundry.org/log-cache-cli
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text: ((slack-ci.yml/Notes/slack_build_failure_text))

- name: log-cache-docker-images
  serial: true
  public: true
  plan:
  - aggregate:
    - get: log-cache-ci
    - get: log-cache-ci-docker-images
      trigger: true
    - get: log-cache
      trigger: true
      passed: ["log-cache-tests"]
  - aggregate:
    - task: build-log-cache-image
      file: log-cache-ci/tasks/build-go-docker-image/task.yml
      input_mapping:
        context-repo: log-cache-ci-docker-images
        source-repo: log-cache
      output_mapping:
        build-image: build-log-cache-image
      params:
        CONTEXT_PATH: docker-images/log-cache
        BASE_PACKAGE: code.cloudfoundry.org/log-cache
    - task: build-nozzle-image
      file: log-cache-ci/tasks/build-go-docker-image/task.yml
      input_mapping:
        context-repo: log-cache-ci-docker-images
        source-repo: log-cache
      output_mapping:
        build-image: build-nozzle-image
      params:
        CONTEXT_PATH: docker-images/log-cache-nozzle
        BASE_PACKAGE: code.cloudfoundry.org/log-cache
    - task: build-gateway-image
      file: log-cache-ci/tasks/build-go-docker-image/task.yml
      input_mapping:
        context-repo: log-cache-ci-docker-images
        source-repo: log-cache
      output_mapping:
        build-image: build-gateway-image
      params:
        CONTEXT_PATH: docker-images/log-cache-gateway
        BASE_PACKAGE: code.cloudfoundry.org/log-cache
    - task: build-scheduler-image
      file: log-cache-ci/tasks/build-go-docker-image/task.yml
      input_mapping:
        context-repo: log-cache-ci-docker-images
        source-repo: log-cache
      output_mapping:
        build-image: build-scheduler-image
      params:
        CONTEXT_PATH: docker-images/log-cache-scheduler
        BASE_PACKAGE: code.cloudfoundry.org/log-cache
  - aggregate:
    - put: log-cache-image
      params:
        build: build-log-cache-image/build
        tag: build-log-cache-image/tag
        tag_as_latest: true
        cache: true
        cache_tag: latest
    - put: nozzle-image
      params:
        build: build-nozzle-image/build
        tag: build-nozzle-image/tag
        tag_as_latest: true
        cache: true
        cache_tag: latest
    - put: gateway-image
      params:
        build: build-gateway-image/build
        tag: build-gateway-image/tag
        tag_as_latest: true
        cache: true
        cache_tag: latest
    - put: scheduler-image
      params:
        build: build-scheduler-image/build
        tag: build-scheduler-image/tag
        tag_as_latest: true
        cache: true
        cache_tag: latest

- name: log-cache-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks-image
    - get: log-cache-ci
    - get: log-cache-release
      trigger: true
    - get: log-cache
      trigger: true
      passed: ["log-cache-tests"]
  - task: update-log-cache-submodule
    file: log-cache-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: log-cache-release
      source-repo: log-cache
    output_mapping:
      bumped-release-repo: bumped-log-cache-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/log-cache
  - task: sync-package-specs
    file: log-cache-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: bumped-log-cache-release
    output_mapping:
      updated-release-repo: synced-log-cache-release
    params:
      SCRIPT: scripts/sync-package-specs
  - task: run-tests
    file: log-cache-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: synced-log-cache-release
    params:
      SCRIPT: scripts/test
  - task: commit
    file: log-cache-ci/tasks/commit-with-shortlog/task.yml
    image: cf-deployment-concourse-tasks-image
    input_mapping:
      release-repo: synced-log-cache-release
    output_mapping:
      committed-repo: committed-log-cache-release
    params:
      PATHS: |
        src/code.cloudfoundry.org/log-cache
        packages
  - put: log-cache-release
    params:
      repository: committed-log-cache-release
      rebase: true
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text: ((slack-ci.yml/Notes/slack_build_failure_text))

- name: log-cache-acceptance-tests-release-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks-image
    - get: log-cache-ci
    - get: log-cache-acceptance-tests-release
      trigger: true
    - get: log-cache-acceptance-tests
      trigger: true
  - task: update-log-cache-submodule
    file: log-cache-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: log-cache-acceptance-tests-release
      source-repo: log-cache
    output_mapping:
      bumped-release-repo: log-cache-acceptance-tests-release-with-bumped-log-cache
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/log-cache
  - task: update-log-cache-acceptance-tests-submodule
    file: log-cache-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: log-cache-acceptance-tests-release-with-bumped-log-cache
      source-repo: log-cache-acceptance-tests
    output_mapping:
      bumped-release-repo: log-cache-acceptance-tests-release-with-bumped-log-cache-acceptance-tests
    params:
      SUBMODULE_PATH: src/github.com/cloudfoundry/log-cache-acceptance-tests
  - task: sync-package-specs
    file: log-cache-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: log-cache-acceptance-tests-release-with-bumped-log-cache-acceptance-tests
    output_mapping:
      updated-release-repo: synced-log-cache-acceptance-tests-release
    params:
      SCRIPT: scripts/sync-package-specs
  - task: commit
    file: log-cache-ci/tasks/commit-with-shortlog/task.yml
    image: cf-deployment-concourse-tasks-image
    input_mapping:
      release-repo: synced-log-cache-acceptance-tests-release
    output_mapping:
      committed-repo: committed-log-cache-acceptance-tests-release
    params:
      PATHS: |
        src/code.cloudfoundry.org/go-log-cache
        src/github.com/cloudfoundry/log-cache-acceptance-tests
        packages
  - put: log-cache-acceptance-tests-release
    params:
      repository: committed-log-cache-acceptance-tests-release
      rebase: true
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text: ((slack-ci.yml/Notes/slack_build_failure_text))

- name: cf-deploy
  serial_groups: [cf-deploy]
  plan:
  - aggregate:
    - get: log-cache-ci
    - get: bbl-state
      resource: log-cache-deployments
    - get: cf-deployment
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-concourse-tasks-image
    - get: log-cache-release
      trigger: true
      passed: ["log-cache-bump-submodule"]
    - get: grafana-boshrelease
  - aggregate:
    - task: upload-log-cache-release
      file: log-cache-ci/tasks/upload-release/task.yml
      image: cf-deployment-concourse-tasks-image
      input_mapping:
        bosh-release-dir: log-cache-release
      params:
        BBL_STATE_DIR: gcp/lime
    - task: upload-grafana-release
      file: log-cache-ci/tasks/upload-release/task.yml
      image: cf-deployment-concourse-tasks-image
      input_mapping:
        bosh-release-dir: grafana-boshrelease
      params:
        BBL_STATE_DIR: gcp/lime
  - task: copy-ops-files
    image: cf-deployment-concourse-tasks-image
    config:
      platform: linux
      inputs:
      - name: bbl-state
      - name: cf-deployment
      - name: log-cache-ci
      - name: log-cache-release
      outputs:
      - name: ops-files
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          set -e

          cp cf-deployment/operations/use-compiled-releases.yml ops-files
          cp log-cache-ci/ops-files/grafana-in-cf.yml ops-files

          cat <<EOT >> ops-files/test-clients.yml
          - type: replace
            path: /instance_groups/name=uaa/jobs/name=uaa/properties/uaa/clients/lcats?
            value:
              authorities: doppler.firehose
              authorized-grant-types: client_credentials
              scope: doppler.firehose
              secret: ((lcats_client_secret))
          - type: replace
            path: /variables/name=lcats_client_secret?
            value:
              name: lcats_client_secret
              type: password
          - type: replace
            path: /instance_groups/name=uaa/jobs/name=uaa/properties/uaa/clients/blackbox?
            value:
              authorities: doppler.firehose
              authorized-grant-types: client_credentials
              scope: doppler.firehose
              secret: ((blackbox_client_secret))
          - type: replace
            path: /variables/name=blackbox_client_secret?
            value:
              name: blackbox_client_secret
              type: password
          - type: replace
            path: /instance_groups/name=uaa/jobs/name=uaa/properties/uaa/clients/datadog-forwarder?
            value:
              authorities: doppler.firehose
              authorized-grant-types: client_credentials
              scope: doppler.firehose
              secret: ((datadog_forwarder_client_secret))
          - type: replace
            path: /variables/name=datadog_forwarder_client_secret?
            value:
              name: datadog_forwarder_client_secret
              type: password
          EOT

          cat <<EOT >> ops-files/bosh-speed.yml
          - type: replace
            path: /update/max_in_flight
            value: 10
          - type: replace
            path: /update/canaries
            value: 5
          EOT

          cat <<EOT >> ops-files/use-log-cache-latest.yml
          - type: replace
            path: /releases/name=log-cache
            value:
              name: log-cache
              version: latest
          EOT

          cat <<EOT >> ops-files/metric-store.yml
          - type: replace
            path: /instance_groups/-
            value:
              name: metric-store-scheduler
              azs:
              - z1
              instances: 1
              jobs:
              - name: metric-store-scheduler
                release: log-cache
              - name: metric-store-expvar-forwarder
                properties:
                  counters: []
                  gauges: []
                  maps:
                  - addr: http://localhost:6064/debug/vars
                    name: worker-assignments
                    source_id: metric-store-scheduler
                    template: "{{.WorkerAssignments | jsonMap}}"
                  - addr: http://localhost:6064/debug/vars
                    name: worker-health
                    source_id: metric-store-scheduler
                    template: "{{.WorkerHealth | jsonMap}}"
                release: log-cache
              networks:
              - name: default
              stemcell: default
              update:
                serial: true
              vm_type: minimal

          - type: replace
            path: /instance_groups/-
            value:
              name: metric-store
              networks:
              - name: default
              stemcell: default
              vm_type: minimal
              azs:
              - z1
              instances: 1
              jobs:
              - name: metric-store
                properties:
                  egress_port: 8080
                  health_addr: localhost:6060
                  tls:
                    ca_cert: ((log_cache.ca))
                    cert: ((log_cache.certificate))
                    key: ((log_cache.private_key))
                release: log-cache
              - name: metric-store-gateway
                properties:
                  gateway_addr: localhost:8081
                release: log-cache
              - name: metric-store-nozzle
                consumes:
                  reverse_log_proxy:
                    from: reverse_log_proxy
                properties:
                  logs_provider:
                    tls:
                      ca_cert: ((logs_provider.ca))
                      cert: ((logs_provider.certificate))
                      key: ((logs_provider.private_key))
                release: log-cache
              - name: metric-store-expvar-forwarder
                properties:
                  counters:
                  - addr: http://localhost:6060/debug/vars
                    name: egress
                    source_id: metric-store
                    template: "{{.LogCache.Egress}}"
                  - addr: http://localhost:6060/debug/vars
                    name: ingress
                    source_id: metric-store
                    template: "{{.LogCache.Ingress}}"
                  - addr: http://localhost:6060/debug/vars
                    name: expired
                    source_id: metric-store
                    template: "{{.LogCache.Expired}}"
                  - addr: http://localhost:6060/debug/vars
                    name: dropped
                    source_id: metric-store
                    template: "{{.LogCache.Dropped}}"
                  - addr: http://localhost:6060/debug/vars
                    name: promql-timeout
                    source_id: metric-store
                    template: "{{.LogCache.PromQLTimeout}}"
                  - addr: http://localhost:6061/debug/vars
                    name: egress
                    source_id: metric-store-nozzle
                    template: "{{.Nozzle.Egress}}"
                  - addr: http://localhost:6061/debug/vars
                    name: ingress
                    source_id: metric-store-nozzle
                    template: "{{.Nozzle.Ingress}}"
                  - addr: http://localhost:6061/debug/vars
                    name: err
                    source_id: metric-store-nozzle
                    template: "{{.Nozzle.Err}}"
                  - addr: http://localhost:6061/debug/vars
                    name: dropped
                    source_id: metric-store-nozzle
                    template: "{{.Nozzle.Dropped}}"
                  gauges:
                  - addr: http://localhost:6060/debug/vars
                    name: cache-period
                    source_id: metric-store
                    template: "{{.LogCache.CachePeriod}}"
                  - addr: http://localhost:6060/debug/vars
                    name: store-size
                    source_id: metric-store
                    template: "{{.LogCache.StoreSize}}"
                  - addr: http://localhost:6060/debug/vars
                    name: total-system-memory
                    source_id: metric-store
                    template: "{{.LogCache.TotalSystemMemory}}"
                  - addr: http://localhost:6060/debug/vars
                    name: available-system-memory
                    source_id: metric-store
                    template: "{{.LogCache.AvailableSystemMemory}}"
                  - addr: http://localhost:6065/debug/vars
                    name: last-uaa-latency
                    source_id: metric-store-cf-auth-proxy
                    template: "{{.CFAuthProxy.LastUAALatency}}"
                  - addr: http://localhost:6065/debug/vars
                    name: last-capi-v3-apps-latency
                    source_id: metric-store-cf-auth-proxy
                    template: "{{.CFAuthProxy.LastCAPIV3AppsLatency}}"
                  - addr: http://localhost:6065/debug/vars
                    name: last-capi-v2-list-service-instances-latency
                    source_id: metric-store-cf-auth-proxy
                    template: "{{.CFAuthProxy.LastCAPIV2ListServiceInstancesLatency}}"
                  - addr: http://localhost:6065/debug/vars
                    name: last-capi-v4-log-access-latency
                    source_id: metric-store-cf-auth-proxy
                    template: "{{.CFAuthProxy.LastCAPIV4LogAccessLatency}}"
                  - addr: http://localhost:6065/debug/vars
                    name: last-capi-v2-service-instances-latency
                    source_id: metric-store-cf-auth-proxy
                    template: "{{.CFAuthProxy.LastCAPIV2ServiceInstancesLatency}}"
                  maps: []
                release: log-cache
              - name: route_registrar
                properties:
                  route_registrar:
                    routes:
                    - name: metric-store-reverse-proxy
                      port: 8083
                      registration_interval: 20s
                      uris:
                      - metric-store.((system_domain))
                      - "*.metric-store.((system_domain))"
                release: routing
              - name: metric-store-cf-auth-proxy
                properties:
                  cc:
                    ca_cert: ((log_cache_tls_cc_auth_proxy.ca))
                    cert: ((log_cache_tls_cc_auth_proxy.certificate))
                    key: ((log_cache_tls_cc_auth_proxy.private_key))
                    capi_internal_addr: https://cloud-controller-ng.service.cf.internal:9023
                    common_name: cloud-controller-ng.service.cf.internal
                  proxy_port: 8083
                  uaa:
                    ca_cert: ((uaa_ca.certificate))
                    client_id: doppler
                    client_secret: ((uaa_clients_doppler_secret))
                    internal_addr: https://uaa.service.cf.internal:8443
                release: log-cache
          EOT

          cat <<EOT >> ops-files/cf-deployment-candidate-changes.yml
          - type: remove
            path: /instance_groups/name=doppler/jobs/name=log-cache-group-reader

          - type: replace
            path: /instance_groups/name=metric-store/jobs/name=metric-store/provides?
            value:
              metric-store:
                shared: true
          EOT
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    params:
      BBL_STATE_DIR: gcp/lime
  - task: cf-deploy
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      vars-files: bbl-state
    params:
      BBL_STATE_DIR: gcp/lime
      SYSTEM_DOMAIN: lime.loggr.cf-app.com
      OPS_FILES: |
        use-compiled-releases.yml
        test-clients.yml
        bosh-speed.yml
        use-log-cache-latest.yml
        metric-store.yml
        cf-deployment-candidate-changes.yml
        grafana-in-cf.yml
  - task: enable-feature-flags
    file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
    params:
      BBL_STATE_DIR: gcp/lime
      SYSTEM_DOMAIN: lime.loggr.cf-app.com
      ENABLED_FEATURE_FLAGS: diego_docker
  - task: cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: gcp/lime
  - task: create-test-space
    file: log-cache-ci/tasks/create-org-and-space/task.yml
    params:
      BBL_STATE_DIR: gcp/lime
      ORG: test
      SPACE: test
      SYSTEM_DOMAIN: lime.loggr.cf-app.com
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text: ((slack-ci.yml/Notes/slack_build_failure_text))

- name: lcats
  serial_groups: [cf-deploy]
  plan:
  - aggregate:
    - get: log-cache-release
      passed:
      - cf-deploy
      trigger: true
    - get: log-cache-deployments
    - get: log-cache-ci
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-concourse-tasks-image
    - get: log-cache-acceptance-tests-release
      trigger: true
      passed: ["log-cache-acceptance-tests-release-bump-submodule"]
  - task: upload-lcats
    file: log-cache-ci/tasks/upload-release/task.yml
    image: cf-deployment-concourse-tasks-image
    params:
      BBL_STATE_DIR: gcp/lime
    input_mapping:
      bbl-state: log-cache-deployments
      bosh-release-dir: log-cache-acceptance-tests-release
  - task: lcats-deploy
    file: log-cache-ci/tasks/bosh-deploy/task.yml
    image: cf-deployment-concourse-tasks-image
    params:
      BBL_STATE_DIR: gcp/lime
      DEPLOYMENT_NAME: lcats
      MANIFEST_FILE: manifests/manifest.yml
      OPS_FILES: gcp/lime/ops-files/lcats.yml
      VARS_FILES: gcp/lime/lcats-vars.yml
    input_mapping:
      bbl-state: log-cache-deployments
      bosh-release: log-cache-acceptance-tests-release
      ops-files: log-cache-deployments
      vars-files: log-cache-deployments
  - task: run-lcats
    file: log-cache-ci/tasks/run-errand/task.yml
    image: cf-deployment-concourse-tasks-image
    params:
      BBL_STATE_DIR: gcp/lime
      DEPLOYMENT_NAME: lcats
      ERRAND: lcats
      KEEP_ALIVE: true
    input_mapping:
      bbl-state: log-cache-deployments
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text: ((slack-ci.yml/Notes/slack_build_failure_text))

- name: cats
  serial_groups: [cf-deploy]
  plan:
  - aggregate:
    - get: log-cache-release
      passed:
      - cf-deploy
      trigger: true
    - get: log-cache-deployments
    - get: log-cache-ci
    - get: cf-acceptance-tests
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-concourse-tasks-image
    - get: bbl-state
      resource: log-cache-deployments
  - task: integration-config
    file: log-cache-ci/tasks/create-integration-config/task.yml
    image: cf-deployment-concourse-tasks-image
    params:
      BBL_STATE_DIR: gcp/lime
      SYSTEM_DOMAIN: lime.loggr.cf-app.com
  - task: cats
    file: cf-deployment-concourse-tasks/run-cats/task.yml
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text: ((slack-ci.yml/Notes/slack_build_failure_text))

- name: log-cache-release-elect-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: log-cache-release
      trigger: true
      passed: ["lcats"]
    - get: log-cache-release-elect
  - put: log-cache-release-elect
    params:
      repository: develop

- name: log-cache-cli-promotion
  serial: true
  plan:
  - aggregate:
    - get: log-cache-cli
      trigger: true
    - get: log-cache-cli-master
    - get: bumper-tool
    - get: log-cache-ci
  - task: bumper
    file: log-cache-ci/tasks/bumper/task.yml
    input_mapping:
      source: log-cache-cli
      dest: log-cache-cli-master
    params:
      SOURCE_BRANCH: develop
      DEST_BRANCH: master
  - put: log-cache-cli-master
    params:
      repository: merged-dest

- name: log-cache-master-promotion
  serial: true
  plan:
  - aggregate:
    - get: log-cache-release-elect
      passed: ["log-cache-release-elect-promotion"]
      trigger: true
    - get: log-cache-release-master
    - get: bumper-tool
    - get: log-cache-ci
  - task: bumper
    file: log-cache-ci/tasks/bumper/task.yml
    input_mapping:
      source: log-cache-release-elect
      dest: log-cache-release-master
    params:
      SOURCE_BRANCH: release-elect
      DEST_BRANCH: master
      FOLLOW_BUMPS_OF: src/code.cloudfoundry.org/log-cache
  - put: log-cache-release-master
    params:
      repository: merged-dest

- name: leadership-election-tests
  public: true
  serial: true
  plan:
  - aggregate:
    - get: log-cache-ci
    - get: leadership-election
      trigger: true
  - task: run-tests
    file: log-cache-ci/tasks/go-test-with-latest-packages/task.yml
    params:
      IMPORT_PATH: code.cloudfoundry.org/leadership-election
    input_mapping:
      source-repo: leadership-election

- name: leadership-election-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks-image
    - get: log-cache-ci
    - get: leadership-election-release
      trigger: true
    - get: leadership-election
      passed:
      - leadership-election-tests
      trigger: true
  - task: update-submodule
    file: log-cache-ci/tasks/bump-submodule/task.yml
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/leadership-election
    input_mapping:
      release-repo: leadership-election-release
      source-repo: leadership-election
    output_mapping:
      bumped-release-repo: updated-leadership-election-release
  - task: sync-package-specs
    file: log-cache-ci/tasks/run-release-script/task.yml
    params:
      SCRIPT: scripts/sync-package-specs
    input_mapping:
      release-repo: updated-leadership-election-release
    output_mapping:
      updated-release-repo: synced-leadership-election-release
  - task: run-tests
    file: log-cache-ci/tasks/run-release-script/task.yml
    params:
      SCRIPT: scripts/test
    input_mapping:
      release-repo: synced-leadership-election-release
  - task: commit
    file: log-cache-ci/tasks/commit-with-shortlog/task.yml
    image: cf-deployment-concourse-tasks-image
    params:
      PATHS: src/code.cloudfoundry.org/leadership-election packages
    input_mapping:
      release-repo: synced-leadership-election-release
    output_mapping:
      committed-repo: committed-leadership-election-release
  - put: leadership-election-release
    params:
      rebase: true
      repository: committed-leadership-election-release
