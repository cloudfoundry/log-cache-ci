resources:
- name: deployments-loggregator
  type: git
  source:
    uri: git@github.com:cloudfoundry/deployments-loggregator
    private_key: ((deployments_loggregator_key.private_key))

- name: log-cache-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/log-cache-release
    branch: master

jobs:
- name: log-cache-deploy
  serial: true
  plan:
  - aggregate:
    - get: deployments-loggregator
    - get: log-cache-release
      trigger: true

  - aggregate:
    - task: upload-log-cache
      config:
        image_resource:
          type: docker-image
          source:
            repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
        platform: linux
        inputs:
        - name: log-cache-release
        params:
          BOSH_CLIENT: ((prod_bosh_client_id))
          BOSH_CLIENT_SECRET: ((prod_bosh_client_secret))
          BOSH_CA_CERT: ((prod_bosh_ca_cert))
          BOSH_ENVIRONMENT: ((prod_bosh_target))
        run:
          path: bash
          args:
          - -c
          - |
            #!/bin/bash
            set -eux

            pushd log-cache-release
              bosh create-release
              bosh upload-release --rebase
            popd

    - task: copy-ops-files
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ubuntu
        inputs:
        - name: deployments-loggregator
        outputs:
        - name: ops-files
        run:
          path: /bin/bash
          args:
          - "-c"
          - |
            cp deployments-loggregator/pws/ops-files/log-cache.yml ops-files/

  - task: log-cache-deploy
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
      - name: log-cache-release
      - name: ops-files
      params:
        SYSTEM_DOMAIN: coconut.cf-app.com
        DEPLOYMENT_NAME: log-cache
        MANIFEST_FILE: manifests/log-cache.yml
        BOSH_CLIENT: ((prod_bosh_client_id))
        BOSH_CLIENT_SECRET: ((prod_bosh_client_secret))
        BOSH_CA_CERT: ((prod_bosh_ca_cert))
        BOSH_ENVIRONMENT: ((prod_bosh_target))
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -eux

          bosh \
            deploy "log-cache-release/$MANIFEST_FILE" \
            --deployment "$DEPLOYMENT_NAME" \
            --non-interactive \
            --ops-file ops-files/log-cache.yml
