resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: cf-deployment-concourse-tasks-image
  type: docker-image
  source:
    repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
    tag: v5.24.0

- name: log-store-release-repo
  type: git
  source:
    uri: git@github.com:pivotal/log-store-release
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: slack-alert
  type: slack-notification
  source:
    url: ((slack-ci.yml/Notes/slack_alert_webhook_url))

- name: every-3-hours
  type: time
  source:
    interval: 3h

jobs:
- name: log-store-edge-deploy
  serial: true
  serial_groups: [chaos]
  plan:
  - aggregate:
    - get: log-store-release-repo
      trigger: true
    - get: cf-deployment-concourse-tasks-image
  - put: slack-alert
    params:
      silent: true
      username: ((slack-ci.yml/Notes/slack_alert_username))
      icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
      channel: ((slack-ci.yml/Notes/slack_alert_channel))
      text: ":yellow_heart: Started :tree-log: Log Store deployment to :knife: PWS Edge"
  - task: upload-release
    file: log-store-release-repo/ci/tasks/upload-release/task.yml
    image: cf-deployment-concourse-tasks-image
    input_mapping:
      bosh-release-dir: log-store-release-repo
    params:
      BOSH_CA_CERT: ((bosh-ca-cert.certificate))
      BOSH_CLIENT: ((bosh-admin-client.username))
      BOSH_CLIENT_SECRET: ((bosh-admin-client.password))
      BOSH_ENVIRONMENT: bosh.run.pivotal.io
  - task: deploy
    image: cf-deployment-concourse-tasks-image
    config:
      platform: linux
      inputs:
      - name: log-store-release-repo
      params:
        BOSH_CA_CERT: ((bosh-ca-cert.certificate))
        BOSH_CLIENT: ((bosh-admin-client.username))
        BOSH_CLIENT_SECRET: ((bosh-admin-client.password))
        BOSH_ENVIRONMENT: bosh.run.pivotal.io
        BOSH_DEPLOYMENT: log-store-edge
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -eux

          bosh deploy "log-store-release-repo/manifests/log-store-edge.yml" \
            --var pws-datadog-forwarder-client-username="((pws-datadog-forwarder-client/Username))" \
            --var pws-datadog-forwarder-client-password="((pws-datadog-forwarder-client/Password))" \
            --non-interactive
  on_success:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text: ":green_heart: Finished :tree-log: Log Store deployment to :knife: PWS Edge"
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text: ":broken_heart: Failed to deploy :tree-log: Log Store: to :knife: PWS Edge"

- name: metric-store-edge-kill-vm
  serial: true
  serial_groups: [chaos]
  plan:
  - put: slack-alert
    params:
      silent: true
      username: ((slack-ci.yml/Notes/slack_alert_username))
      icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
      channel: ((slack-ci.yml/Notes/slack_alert_channel))
      text: ":monkey: Killing a :tree-log: Log Store Edge vm"
  - aggregate:
    - get: cf-deployment-concourse-tasks-image
    - get: log-store-release-repo
      passed: [log-store-edge-deploy]
    - get: every-3-hours
      trigger: true
  - task: kill-vm
    image: cf-deployment-concourse-tasks-image
    config:
      platform: linux
      params:
        BOSH_CA_CERT: ((bosh-ca-cert.certificate))
        BOSH_CLIENT: ((bosh-admin-client.username))
        BOSH_CLIENT_SECRET: ((bosh-admin-client.password))
        BOSH_ENVIRONMENT: bosh.run.pivotal.io
        BOSH_DEPLOYMENT: log-store-edge
        VM_OFFLINE_DURATION: 5m
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -eux

          vm_to_stop="$(bosh vms |
            grep 'log-store/' |
            sort -R |
            head -n 1 |
            awk '{print $1}')"

          bosh \
            stop "${vm_to_stop}" \
            --soft --skip-drain \
            --non-interactive

          sleep ${VM_OFFLINE_DURATION}

          bosh \
            start "${vm_to_stop}" \
            --non-interactive
  on_success:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text: ":green_heart: Finished killing and restarting a :tree-log: Log Store Edge vm"
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text: ":broken_heart: Failed to kill a :tree-log: Log Store Edge vm
          Details here: https://concourse.run.pivotal.io/teams/pcf-observability/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
