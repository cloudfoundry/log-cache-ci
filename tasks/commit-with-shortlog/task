#!/bin/bash

set -euo pipefail

function has_diff {
    if git diff-index --quiet HEAD; then
        return 1
    else
        return 0
    fi
}

function stage_paths {
    for path in "${paths_to_commit[@]}"; do
        git add ${path}
    done
}

function build_submodule_message {
    local submodule_path=$1
    local start_sha=$2
    local end_sha=$3

    pushd ${submodule_path} > /dev/null
        echo "${submodule_path}:"

        git log --pretty="  %h: %s (%an, %cn)" ${start_sha}..${end_sha}
    popd > /dev/null
}

function build_message {
    echo "Bump submodules"

    git diff --cached --raw | (
        while read _ dst_mode start_sha end_sha _ submodule_path; do
            if [[ $dst_mode != 160000 ]]; then
                # Not a submodule
                continue
            fi

            echo
            build_submodule_message $submodule_path $(tr -d . <<< "${start_sha}") $(tr -d . <<< "${end_sha}")
        done
    )
}

function commit {
    message="$(build_message)"

    git config --global user.email 'cf-log-cache@pivotal.io>'
    git config --global user.name 'Log Cache CI'
    git commit -m "${message}"
}

read -a paths_to_commit <<< "${PATHS}"

echo "Paths to be committed:"
for path in ${paths_to_commit[@]}; do
    echo "  $path"
done
echo

pushd committed-repo >/dev/null
    cp -r ../release-repo/. .
    git status > /dev/null

    if has_diff; then
        stage_paths

        git status

        commit

        if has_diff; then
            echo "uncommitted code still present after commit"
            exit 1
        fi
    else
        echo "No diff present, skipping commit"
    fi
popd >/dev/null
