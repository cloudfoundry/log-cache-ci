#!/bin/bash

set -ex

login_args=""
if [ "$SKIP_SSL_VALIDATION" = "true" ]; then
    login_args="--skip-ssl-validation"
fi

# target api
cf login \
  -a api."$SYSTEM_DOMAIN" \
  -u "$USERNAME" \
  -p "$PASSWORD" \
  -s "$SPACE" \
  -o "$ORG" \
  $login_args

export GOPATH="$PWD/go"
mkdir -p "$GOPATH/src/code.cloudfoundry.org"
cp -r loggregator-tools/ "$GOPATH/src/code.cloudfoundry.org/"

pushd "$GOPATH/src/code.cloudfoundry.org/log-cache-tools/log-cache-forwarders/cmd/datadog"
  go get -d ./...
  go build

  cf push "$APP_NAME" -i 3 -b binary_buildpack -c ./datadog -m 1G -u none --no-start

  cf set-env "$APP_NAME" LOG_CACHE_HTTP_ADDR "$LOG_CACHE_HTTP_ADDR"
  cf set-env "$APP_NAME" LOG_CACHE_GROUP_NAME "$LOG_CACHE_GROUP_NAME"

  cf set-env "$APP_NAME" DATADOG_API_KEY "$DATADOG_API_KEY"
  cf set-env "$APP_NAME" METRIC_HOST "$SYSTEM_DOMAIN"
  cf set-env "$APP_NAME" DATADOG_TAGS "$DATADOG_TAGS"

  cf set-env "$APP_NAME" UAA_ADDR "https://uaa.$SYSTEM_DOMAIN"
  cf set-env "$APP_NAME" CLIENT_ID "$UAA_CLIENT"
  cf set-env "$APP_NAME" CLIENT_SECRET "$UAA_CLIENT_SECRET"

  cf set-env "$APP_NAME" SOURCE_ID_BLACKLIST "$SOURCE_ID_BLACKLIST"
  cf set-env "$APP_NAME" SOURCE_ID_WHITELIST "$SOURCE_ID_WHITELIST"


  if [ "$SKIP_SSL_VALIDATION" = "true" ]; then
    cf set-env "$APP_NAME" SKIP_CERT_VERIFY "$SKIP_SSL_VALIDATION"
  fi

  cf start "$APP_NAME"
popd
